/* tslint:disable */
/* eslint-disable */
/**
 * Bodoge API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AbleToPlay
 */
export interface AbleToPlay {
    /**
     * Flag indicating whether the card can be played.
     * @type {boolean}
     * @memberof AbleToPlay
     */
    isAbleToPlay: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AbleToPlay
     */
    previousCharas?: Array<string>;
}

/**
 * Check if a given object implements the AbleToPlay interface.
 */
export function instanceOfAbleToPlay(value: object): value is AbleToPlay {
    if (!('isAbleToPlay' in value) || value['isAbleToPlay'] === undefined) return false;
    return true;
}

export function AbleToPlayFromJSON(json: any): AbleToPlay {
    return AbleToPlayFromJSONTyped(json, false);
}

export function AbleToPlayFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbleToPlay {
    if (json == null) {
        return json;
    }
    return {
        
        'isAbleToPlay': json['isAbleToPlay'],
        'previousCharas': json['previousCharas'] == null ? undefined : json['previousCharas'],
    };
}

  export function AbleToPlayToJSON(json: any): AbleToPlay {
      return AbleToPlayToJSONTyped(json, false);
  }

  export function AbleToPlayToJSONTyped(value?: AbleToPlay | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'isAbleToPlay': value['isAbleToPlay'],
        'previousCharas': value['previousCharas'],
    };
}

